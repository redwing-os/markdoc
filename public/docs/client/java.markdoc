## VectorDB Java Protocol Buffer Definition

This document provides a reference for the `VectorWriteRequest`, `VectorBatchWriteRequest`, and `VectorWriteResponse` messages in the VectorDB protocol buffer definition. These messages are part of the auto-generated Java classes for interacting with the VectorDB service.

## VectorWriteRequest Message

The `VectorWriteRequest` message is used to write a vector to the database, identified by a unique key.

### Fields

- `key`: The unique identifier for the vector.
- `vector`: A repeated field representing the vector elements.
- `created_at`: A timestamp field indicating when the vector was created.
- `updated_at`: A timestamp field indicating when the vector was last updated.

## VectorBatchWriteRequest Message

The `VectorBatchWriteRequest` message allows for batch writing of multiple vectors to the database.

### Fields

- `vectors`: A repeated field containing multiple `VectorWriteRequest` messages.

## VectorWriteResponse Message

The `VectorWriteResponse` message provides a response after attempting to write a vector to the database.

### Fields

- `success`: A boolean field indicating whether the write operation was successful.

## Usage

To use these messages, import the corresponding Java classes generated by the Protocol Buffer compiler into your Java application. You can then create instances of these messages, populate them with the required data, and use them in RPC calls to the VectorDB service.

## Example

```java
Vectordb.VectorWriteRequest writeRequest = Vectordb.VectorWriteRequest.newBuilder()
    .setKey("unique_vector_key")
    .addAllVector(vectorElements)
    .setCreatedAt(creationTimestamp)
    .setUpdatedAt(updateTimestamp)
    .build();

Vectordb.VectorBatchWriteRequest batchWriteRequest = Vectordb.VectorBatchWriteRequest.newBuilder()
    .addVectors(writeRequest)
    .build();

Vectordb.VectorWriteResponse writeResponse = vectorDbService.writeVector(writeRequest);
boolean isSuccess = writeResponse.getSuccess();
Notes
The Java classes for these messages are part of the auto-generated code by the Protocol Buffer compiler and should not be edited manually.
Ensure that the Protocol Buffer runtime library for Java is included in your project's dependencies to use these generated classes.

This markdown document is tailored to Java developers using the VectorDB protocol buffer definitions and provides details on the message types and their usage. It's intended to assist in understanding how to construct and interact with these messages within Java applications.